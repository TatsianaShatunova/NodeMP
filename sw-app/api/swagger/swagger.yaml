---
swagger: "2.0"
info:
  description: "This is a sample NodeMP server.\n"
  version: "1.0.0"
  title: "Swagger NodeMP"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:10010"
basePath: "/"
tags:
- name: "cities"
  description: "Everything about your cities"
- name: "products"
  description: "Everything about your products"
schemes:
- "https"
- "http"
paths:
  /api/cities:
    x-swagger-router-controller: "cities"
    get:
      tags:
      - "cities"
      summary: "Returns all cities"
      description: "Returns all cities"
      operationId: "getCities"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/City"
    post:
      tags:
      - "cities"
      summary: "Add city"
      operationId: "addCity"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "new city"
        required: true
        schema:
          $ref: "#/definitions/City"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/City"
        400:
          description: "Invalid City"
  /api/cities/{id}:
    get:
      tags:
      - "cities"
      summary: "Find city by ID"
      description: "Returns a single city"
      operationId: "getCityById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of city to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/City"
        400:
          description: "Invalid ID supplied"
        404:
          description: "City not found"
    put:
      tags:
      - "cities"
      summary: "Updated city"
      description: "Update a city."
      operationId: "updateCity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "city id that need to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated city object"
        required: true
        schema:
          $ref: "#/definitions/City"
      responses:
        400:
          description: "Invalid city supplied"
        404:
          description: "City not found"
    delete:
      tags:
      - "cities"
      summary: "Deletes a city"
      operationId: "deleteCity"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "City id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "City not found"
  /api/cities/random:
    x-swagger-router-controller: "cities"
    get:
      tags:
      - "cities"
      summary: "Returns random city"
      description: "Returns random city"
      operationId: "getRandomCity"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/City"
  /api/products:
    get:
      tags:
      - "products"
      summary: "Returns all products"
      description: "Returns all products"
      operationId: "getProducts"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
  /api/products/{id}:
    get:
      tags:
      - "products"
      summary: "Find product by ID"
      description: "Returns a single product"
      operationId: "getProductsById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of city to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
definitions:
  City:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      country:
        type: "string"
      capital:
        type: "string"
    example:
      country: "country"
      capital: "capital"
      name: "name"
      id: 0
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      brand:
        type: "string"
      company:
        type: "string"
      price:
        type: "string"
      isbn:
        type: "string"
    example:
      price: "price"
      isbn: "isbn"
      name: "name"
      company: "company"
      id: 0
      brand: "brand"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
